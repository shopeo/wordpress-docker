services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    command: --authentication_policy=mysql_native_password
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: wordpress
    volumes:
      - ./mysql:/var/lib/mysql

  nginx:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/html:/usr/share/nginx/html

  acme:
    image: nginxproxy/acme-companion:latest
    container_name: acme
    restart: always
    depends_on:
      - nginx
    environment:
      NGINX_PROXY_CONTAINER: nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/acme:/etc/acme.sh

  wordpress:
    image: wordpress:latest
    container_name: wordpress
    restart: always
    depends_on:
      - mysql
      - nginx
      - acme
    env_file:
      - .env
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      VIRTUAL_HOST: ${DOMAIN_NAME}
      LETSENCRYPT_HOST: ${DOMAIN_NAME}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    volumes:
      - ./wordpress:/var/www/html
      - ./custom.ini:/usr/local/etc/php/conf.d/custom.ini
